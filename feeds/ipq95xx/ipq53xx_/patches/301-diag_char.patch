Index: linux-5.4.164-qsdk-26349818b464f8c7b52d59ce73579d9f3dd6bd5d/drivers/char/diag/diagchar_core.c
===================================================================
--- linux-5.4.164-qsdk-26349818b464f8c7b52d59ce73579d9f3dd6bd5d.orig/drivers/char/diag/diagchar_core.c
+++ linux-5.4.164-qsdk-26349818b464f8c7b52d59ce73579d9f3dd6bd5d/drivers/char/diag/diagchar_core.c
@@ -763,11 +763,6 @@ static void diag_cmd_invalidate_polling(
 	driver->polling_reg_flag = 0;
 	list_for_each_safe(start, temp, &driver->cmd_reg_list) {
 		item = list_entry(start, struct diag_cmd_reg_t, link);
-		if (&item->entry == NULL) {
-			pr_err("diag: In %s, unable to search command\n",
-			       __func__);
-			return;
-		}
 		polling = diag_cmd_chk_polling(&item->entry);
 		if (polling == DIAG_CMD_POLLING) {
 			driver->polling_reg_flag = 1;
@@ -829,11 +824,6 @@ struct diag_cmd_reg_entry_t *diag_cmd_se
 
 	list_for_each_safe(start, temp, &driver->cmd_reg_list) {
 		item = list_entry(start, struct diag_cmd_reg_t, link);
-		if (&item->entry == NULL) {
-			pr_err("diag: In %s, unable to search command\n",
-			       __func__);
-			return NULL;
-		}
 		temp_entry = &item->entry;
 		if (temp_entry->cmd_code == entry->cmd_code &&
 		    temp_entry->subsys_id == entry->subsys_id &&
@@ -907,12 +897,6 @@ void diag_cmd_remove_reg_by_pid(int pid)
 	mutex_lock(&driver->cmd_reg_mutex);
 	list_for_each_safe(start, temp, &driver->cmd_reg_list) {
 		item = list_entry(start, struct diag_cmd_reg_t, link);
-		if (&item->entry == NULL) {
-			pr_err("diag: In %s, unable to search command\n",
-			       __func__);
-			mutex_unlock(&driver->cmd_reg_mutex);
-			return;
-		}
 		if (item->pid == pid) {
 			list_del(&item->link);
 			kfree(item);
@@ -931,12 +915,6 @@ void diag_cmd_remove_reg_by_proc(int pro
 	mutex_lock(&driver->cmd_reg_mutex);
 	list_for_each_safe(start, temp, &driver->cmd_reg_list) {
 		item = list_entry(start, struct diag_cmd_reg_t, link);
-		if (&item->entry == NULL) {
-			pr_err("diag: In %s, unable to search command\n",
-			       __func__);
-			mutex_unlock(&driver->cmd_reg_mutex);
-			return;
-		}
 		if (item->proc == proc) {
 			list_del(&item->link);
 			kfree(item);
